
s.reboot;
s.quit;
thisProcess.platform.recordingsDir;
Server.default.makeGui
Server.killAll;
s = Server.local;
s.boot;

ServerOptions.devices[4]
Server.local.options.inDevice_(ServerOptions.devices[4])
Server.local.options.outDevice_(ServerOptions.devices[2])
(
~amibe = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/amibe.aif");
~astronaut = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/astronaut.aif");
~bass = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/bass.aif");
~bassy = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/bassy.aif");
~broadHits = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/broadHits.aif");
~bureau = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/bureau.aif");
~cannonShot = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cannonShot.aif");
~cans = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cans.aif");
~cans2 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cans2.aif");
~cesium = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cesium.aif");
~chirp = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/chirp.aif");
~clank0 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/clank0.aif");
~clank1 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/clank1.aif");
~clank2 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/clank2.aif");
~cloche = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cloche.aif");
~chaud = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/chaud.aif");
~cosmonaut = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cosmonaut.aif");
~crescendo = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/crescendo.aif");
~cricketMachineGun = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/cricketMachineGun.aif");
~distantBird = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/distantBird.aif");
~distantWar = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/distantWar.aif");
~flyaway = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/flyaway.aif");
~foghorn = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/foghorn.aif");
~foghorn2 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/foghorn2.aif");
~fondu = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/fondu.aif");
~fuck = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/fuck.aif");
~ghostStation = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/ghostStation.aif");
~ghostTrain = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/ghostTrain.aif");
~grumble = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/grumble.aif");
~happy = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/happy.aif");
~hitRev = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/hitRev.aif");
~horizon = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/horizon.aif");
~lowBeatles = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/lowBeatles.aif");
~lowString = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/lowString.aif");
~lowSwell = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/lowSwell.aif");
~makeMeLow = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/makeMeLow.aif");
~maman = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/maman.aif");
~merde2 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/merde2.aif");
~metalicSwell = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/metalicSwell.aif");
~noiseRattle = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/noiseRattle.aif");
~notgood = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/notgood.aif");
~pigeon = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/pigeon.aif");
~pulseTrain = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/pulseTrain.aif");
~roundclank = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/roundclank.aif");
~scifi = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/scifi.aif");
~shit = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/shit.aif");
~sillyup = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/sillyup.aif");
~sinwhistle = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/sinwhistle.aif");
~subWoof = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/subWoof.aif");
~swell0 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/swell0.aif");
~swell1 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/swell1.aif");
~swell2 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/swell2.aif");
~swell3 = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/swell3.aif");
~swish = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/swish.aif");
~tweety = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/tweety.aif");
~twinkle = Buffer.read(s,"/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/twinkle.aif");
)
(
SynthDef(\simple1, {|bufnum, rate, startpos = 0, loop = 0, doneAction = 2|
	var snd;
	snd = PlayBuf.ar(1, bufnum, BufRateScale.kr(bufnum), 1, startpos, loop, doneAction);
	Out.ar(0, snd);
}).send(s);

SynthDef(\simple2, {|bufnum, rate, startpos = 0, loop = 0, doneAction = 2|
	var snd;
	snd = PlayBuf.ar(2, bufnum, BufRateScale.kr(bufnum) * rate, 1, startpos, loop, doneAction);
	Out.ar(0, snd);
}).send(s);

SynthDef(\simple2pitch, {|bufnum, rate, ps=1, startpos = 0, loop = 0, doneAction = 2|
	var snd;
	snd = PitchShift.ar(PlayBuf.ar(2, bufnum, BufRateScale.kr(bufnum) * rate, 1, startpos, loop, doneAction), 0.2, ps);
	Out.ar(0, snd);
}).send(s);

SynthDef(\simple2env, {|bufnum, rate, startpos = 0, loop = 0, doneAction = 2|
	var snd;
	var env = EnvGen.kr(Env.new([0.0, 1.0], [BufFrames.kr(bufnum) * 0.75 / (rate * 44100)]));
	//Poll.kr(Impulse.kr(1), (BufFrames.kr(bufnum) * 0.5 / (rate * 44100)), "val");
	snd = PlayBuf.ar(2, bufnum, BufRateScale.kr(bufnum) * rate, 1, startpos, loop, doneAction);
	Out.ar(0, snd * env);
}).send(s);

SynthDef(\makeSpace, {| bufnum, laglo = 0.1, laghi = 2, loop = 0, doneAction = 2 |
	var sound, x, y;

	x = (Lag.kr(TRand.kr(0,1,Impulse.kr(TRand.kr(0,1,Impulse.kr(0.5)))), SinOsc.kr(0.5).range(laglo, laghi)) * 2) - 1;
	y = Lag.kr(TRand.kr(0,1,Impulse.kr(TRand.kr(0,1,Impulse.kr(0.5)))), SinOsc.kr(0.5).range(laglo, laghi));
	sound = PlayBuf.ar(1, bufnum, BufRateScale.kr(bufnum), loop: loop, doneAction: doneAction);
	sound = LPF.ar(sound, 20000 - (y * 19000));
	sound = Pan2.ar(sound, x);
	Out.ar(0, sound * (1/(((y * 98) + 2)**1.2)));

}).send(s);
)

(
~singleton = { |bufnum, ilooplo = 0, iloophi = 4, olooplo = 50, oloophi = 100, swaitlo = 0.2, swaithi = 0.2, lwaitlo = 0, lwaithi = 4|
Routine {
	// total not necessary...
	var total = 0.0;
	var oloopn = { olooplo + (oloophi - olooplo).rand }.value;
	oloopn.value.do {
		var iloopn = { lwaitlo + (lwaithi - lwaitlo).rand }.value;
		var iwaitv = { swaitlo + (swaithi - swaitlo).rand }.value;
		var owaitv = { ilooplo + (iloophi - ilooplo).rand }.value;
		iloopn.value.do {
			Synth(\makeSpace, [\out, 4, \bufnum, bufnum, \loop, 0, \doneAction, 2]);
			iwaitv.wait;
			//"playing inner".postln;
			total = total + iwaitv;
		};
		owaitv.wait;
		total = total + owaitv;
	}
}.play
};

~gDur = {|buf|
	buf.numFrames/44100.0;
};
~swell.play

~swell = Routine.new({
	var swells = [~swell1,~swell2, ~swell3];
	var rates = [0.25, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0];
	var foo = Array.fill(swells.size, {|i| Array.fill(rates.size, {|j| [~gDur.value(swells[i]) / rates[j], rates[j], swells[i]]})}).flatten.sort({|a b| a[0] > b[0]});
	var prev = foo[0][0];
	Synth.new(\simple2env, [\bufnum, foo[0][2], \rate, foo[0][1]]);
	foo[1..].do({|entry|
		(prev - entry[0]).wait;
		prev = entry[0];
		Synth.new(\simple2env, [\bufnum, entry[2], \rate, entry[1]]);
	});
});

~explosion = Routine.new({
	Synth.new(\simple2, [\bufnum, ~broadHits, \rate, 1]);
	Synth.new(\simple2, [\bufnum, ~bass, \rate, 1]);
	Synth.new(\simple2, [\bufnum, ~cannonShot, \rate, 1]);
	Synth.new(\simple2, [\bufnum, ~clank2, \rate, 1]);
		//{PlayBuf.ar(2, ~twinkle, BufRateScale.kr(~twinkle) * Line.kr(3.0, 0.6, ~gDur.value(~twinkle)), doneAction: 2)}.play;
	{PlayBuf.ar(2, ~lowBeatles, BufRateScale.kr(~lowBeatles) * Line.kr(1.0, 0.9, ~gDur.value(~lowBeatles)), doneAction: 2)}.play;
	{PlayBuf.ar(2, ~horizon, BufRateScale.kr(~horizon) * Line.kr(1.0, 0.5, ~gDur.value(~horizon)), doneAction: 2)}.play;
	Synth.new(\simple2pitch, [\bufnum, ~makeMeLow, \rate, 1, \ps, 0.9]);
	Synth.new(\simple2pitch, [\bufnum, ~makeMeLow, \rate, 1, \ps, 0.8]);
	Synth.new(\simple2pitch, [\bufnum, ~makeMeLow, \rate, 1, \ps, 0.7]);
	{PitchShift.ar(PlayBuf.ar(2, ~grumble, BufRateScale.kr(~grumble), doneAction: 2), 0.2, Line.kr(0.9, 0.6, ~gDur.value(~grumble)))}.play;
	Synth.new(\simple2pitch, [\bufnum, ~grumble, \rate, 1, \ps, 0.7]);
});//.play;
)



(

		{
		var snd = PlayBuf.ar(1, ~pigeon, BufRateScale.kr(~pigeon), doneAction: 2);
		var nt = 3;
	var arr = Array.fill(nt, {|i|
		i.postln;
		PitchShift.ar(snd, 0.2, SinOsc.kr((i * 0.1) + 0.1, 0, i * 0.1, 0.6 + (i * 0.1))).dup/nt}
	);
		Limiter.ar(Mix.ar(arr));
	//snd
}.play;
)
(

		{
		var snd = PlayBuf.ar(1, ~pigeon, BufRateScale.kr(~pigeon), doneAction: 2);
	var pig = PitchShift.ar(snd, 0.2, SinOsc.ar(0.1, 0, 0.05, 0.6)).dup + PitchShift.ar(snd, 0.2, 0.7).dup;
		//Limiter.ar(pig);
	//snd
	pig
}.play;
)

/*
ME VOILA, LE PIGEON DE LA MORT.
REDOUTEZ MES AILES GEANTES.
CRAIGNEZ LA PUISSANCE DESTRUCTRICE DE MA FIENTE. DONNEZ MOI DES MIETTES.
DONNEZ MOI LE STAGIAIRE.
*/
/*
Salut pigeon de la mort
Je te rappelle qu'on a une garde partagée de notre enfant
Et c'est moi qui me tape tout le boulot
Donc soit tu me fais un chèque
Soit tu me donnes un deuxième bébé
*/

(
Routine.new({
	~swell.reset;
	~explosion.reset;
	Synth.new(\simple2, [\bufnum, ~distantWar, \rate, 1, \loop, 1]);
	11.0.wait;//6.0.wait;
	//Synth.new(\simple2, [\bufnum, ~chaud, \rate, 1, \loop, 0]);
	~singleton.value(~cosmonaut);
	11.0.wait;//5.0.wait;
	~singleton.value(~astronaut);
	7.0.wait;//4.0.wait;
	~swell.play;
	(~gDur.value(~swell3) * 4).wait;
	/*
	1.0.wait;
	Synth.new(\simple2, [\bufnum, ~crescendo, \rate, 1]);
	(~gDur.value(~crescendo) + 0.1).wait;
	*/
	//0.3.wait;
	/*
	Synth.new(\simple2, [\bufnum, ~shit, \rate, 1, \startpos, 0.394*44100]);
	(~gDur.value(~shit) - 0.39).wait;
	*/
	0.0.wait;
	//Synth.new(\simple2, [\bufnum, ~merde2, \rate, 1, \startpos, 0]);
		(~gDur.value(~merde2) + 0.0).wait;

	~singleton.value(~cesium);
	~explosion.value;
	Synth.new(\simple2, [\bufnum, ~subWoof, \rate, 1, \loop, 1]);
	1.0.wait;
	~singleton.value(~fondu);
	1.0.wait;
	~singleton.value(~scifi);
	0.0.wait;
	//Synth.new(\simple2, [\bufnum, ~pigeon, \rate, 1, \loop, 0]);
	5.5.wait;
	//Synth.new(\simple2, [\bufnum, ~maman, \rate, 1, \loop, 0]);
	28.wait;
	//Synth.new(\simple2, [\bufnum, ~bureau, \rate, 1, \loop, 0]);

}).play;
)

s.prepareForRecord("/Users/mikesolomon/Documents/Compositions/overtime/dJm1k3s0l/pigeon/openingBit.wav");
s.record;
s.stopRecording; // this closes the file and deallocates the buffer recording node, etc.}

Synth.new(\simple2pitch, [\bufnum, ~bass, \rate, 1, \ps, 1]);

// chaud fait qu'est-ce qu'il chaud dans chaud chaud chaud chaud
// donc ce que vous venez d'écouter, c'est ce qu'on appelle un crécendo. normalement, il y a un éclatement de son qui s'enchaîne juste après, sauf que on n'est pas comme ça dans l'ensemble 101...quoique

[~amibe, ~astronaut, ~bass, ~bassy, ~broadHits, ~cannonShot, ~cans, ~cans2, ~cesium, ~chirp, ~clank0, ~clank1, ~clank2, ~cloche, ~cosmonaut, ~cricketMachineGun, ~distantBird, ~distantWar, ~flyaway, ~foghorn, ~foghorn2, ~fondu, ~ghostStation, ~ghostTrain, ~grumble, ~happy, ~hitRev, ~horizon, ~lowBeatles, ~lowString, ~lowSwell, ~makeMeLow, ~metalicSwell, ~noiseRattle, ~pulseTrain, ~roundclank, ~scifi, ~sillyup, ~sinwhistle, ~subWoof, ~swell0, ~swell1, ~swell2, ~swell3, ~swish, ~tweety, ~twinkle]
Synth.new(\simple2, [\bufnum, ~lowSwell, \rate, 1, \startpos, 0]);

{PitchShift.ar(SoundIn.ar([0,1]), 0.2, MouseY.kr(0.6, 1.4))}.play